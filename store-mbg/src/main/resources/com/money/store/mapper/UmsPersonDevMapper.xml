<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.money.store.mapper.UmsPersonDevMapper">
  <resultMap id="BaseResultMap" type="com.money.store.model.UmsPersonDev">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="app_key" jdbcType="VARCHAR" property="appKey" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="id_card_pic" jdbcType="VARCHAR" property="idCardPic" />
    <result column="cardholder" jdbcType="VARCHAR" property="cardholder" />
    <result column="bank_card_type" jdbcType="VARCHAR" property="bankCardType" />
    <result column="bank_card_number" jdbcType="VARCHAR" property="bankCardNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, app_id, app_key, real_name, id_card, id_card_pic, cardholder, bank_card_type, 
    bank_card_number
  </sql>
  <select id="selectByExample" parameterType="com.money.store.model.UmsPersonDevExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ums_person_dev
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ums_person_dev
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ums_person_dev
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.money.store.model.UmsPersonDevExample">
    delete from ums_person_dev
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.money.store.model.UmsPersonDev">
    insert into ums_person_dev (id, user_id, app_id, 
      app_key, real_name, id_card, 
      id_card_pic, cardholder, bank_card_type, 
      bank_card_number)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{appId,jdbcType=VARCHAR}, 
      #{appKey,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{idCardPic,jdbcType=VARCHAR}, #{cardholder,jdbcType=VARCHAR}, #{bankCardType,jdbcType=VARCHAR}, 
      #{bankCardNumber,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.money.store.model.UmsPersonDev">
    insert into ums_person_dev
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="appKey != null">
        app_key,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="idCardPic != null">
        id_card_pic,
      </if>
      <if test="cardholder != null">
        cardholder,
      </if>
      <if test="bankCardType != null">
        bank_card_type,
      </if>
      <if test="bankCardNumber != null">
        bank_card_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="appKey != null">
        #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="idCardPic != null">
        #{idCardPic,jdbcType=VARCHAR},
      </if>
      <if test="cardholder != null">
        #{cardholder,jdbcType=VARCHAR},
      </if>
      <if test="bankCardType != null">
        #{bankCardType,jdbcType=VARCHAR},
      </if>
      <if test="bankCardNumber != null">
        #{bankCardNumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.money.store.model.UmsPersonDevExample" resultType="java.lang.Integer">
    select count(*) from ums_person_dev
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ums_person_dev
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.appKey != null">
        app_key = #{record.appKey,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardPic != null">
        id_card_pic = #{record.idCardPic,jdbcType=VARCHAR},
      </if>
      <if test="record.cardholder != null">
        cardholder = #{record.cardholder,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCardType != null">
        bank_card_type = #{record.bankCardType,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCardNumber != null">
        bank_card_number = #{record.bankCardNumber,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ums_person_dev
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      app_id = #{record.appId,jdbcType=VARCHAR},
      app_key = #{record.appKey,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      id_card_pic = #{record.idCardPic,jdbcType=VARCHAR},
      cardholder = #{record.cardholder,jdbcType=VARCHAR},
      bank_card_type = #{record.bankCardType,jdbcType=VARCHAR},
      bank_card_number = #{record.bankCardNumber,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.money.store.model.UmsPersonDev">
    update ums_person_dev
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="appKey != null">
        app_key = #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="idCardPic != null">
        id_card_pic = #{idCardPic,jdbcType=VARCHAR},
      </if>
      <if test="cardholder != null">
        cardholder = #{cardholder,jdbcType=VARCHAR},
      </if>
      <if test="bankCardType != null">
        bank_card_type = #{bankCardType,jdbcType=VARCHAR},
      </if>
      <if test="bankCardNumber != null">
        bank_card_number = #{bankCardNumber,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.money.store.model.UmsPersonDev">
    update ums_person_dev
    set user_id = #{userId,jdbcType=BIGINT},
      app_id = #{appId,jdbcType=VARCHAR},
      app_key = #{appKey,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      id_card_pic = #{idCardPic,jdbcType=VARCHAR},
      cardholder = #{cardholder,jdbcType=VARCHAR},
      bank_card_type = #{bankCardType,jdbcType=VARCHAR},
      bank_card_number = #{bankCardNumber,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>